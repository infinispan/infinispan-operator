name: Publish to main
on:
  workflow_dispatch:
    inputs:
      ref:
        description: Branch to wwhich changes needs to be pushed
        required: true
      rel_version:
        description: The Operator tag to checkout 
        required: true

  repository_dispatch:
    types: [trigger-main-workflow] 
  
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Configure Git
        run: |
          git config --global user.name "infinispan-qe-bot"
          git config --global user.email "q*@infinispan.org"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: operator
          ref: ${{ github.event.client_payload.ref || github.event.inputs.ref }}
          token: ${{ secrets.INFINISPAN_RELEASE_TOKEN }}

      - name: Set parameters
        id: params
        run: |
          echo "REF=${{ github.event.inputs.ref || github.event.client_payload.ref }}" >> $GITHUB_ENV
          echo "REL_VERSION=${{ github.event.inputs.rel_version || github.event.client_payload.new_tag }}" >> $GITHUB_ENV

      - name: Set Next Version
        id: set_version
        run : |
          ./scripts/ci/bump_version.sh

      - name: Check if the image exists
        id: check_image
        run: >
          MAX_RETRIES=6
          SLEEP_MIN=10
          for i in $(seq 1 $MAX_RETRIES); do
            if docker manifest inspect quay.io/operatorhubio/infinispan:v${{ steps.set_version.outputs.new_tag }}.Final > /dev/null 2>&1; then
              echo "Docker image exists: ${{ steps.set_version.outputs.new_tag}}"
              exit 0
            else
              echo "Retry #$i: Docker image not found. Waiting $SLEEP_MIN minutes..."
              sleep $((SLEEP_MIN * 60))
            fi
          done

          echo "Docker image never appeared after $MAX_RETRIES retries."
          exit 1

      - name: Update the version file to next version
        if: env.IMAGE_EXISTS == 'true'
        env:
          NEXT_VERSION: ${{ steps.bump_tag.outputs.next_version }}
          PREV_VERSION: ${{ steps.bump_tag.outputs.prev_ver }}
        run: |
            cd operator
            echo "$NEXT_VERSION" > version.txt
            sed -i "s/export VERSION=.*/export VERSION=$NEXT_VERSION/" scripts/ci/install-catalog-source.sh
            sed -i -E "s/^[[:space:]]*(for version in [^;]*)(;[[:space:]]*do)/\1 $NEXT_VERSION\2/" scripts/create-olm-catalog.sh
            ./scripts/ci/add_next_version.sh  scripts/test-catalog.yml infinispan-operator.v$NEXT_VERSION infinispan-operator.v$PREV_VERSION
            sed -i -E "s/^( *replaces: +infinispan-operator\.v)[0-9]+\.[0-9]+\.[0-9]+/\1$NEXT_VERSION/" config/manifests/bases/infinispan-operator.clusterserviceversion.yaml
            git add .
            git commit -m "Next Version ${{ steps.next_version.outputs.next_version }}"
            git push origin "${{ steps.params.outputs.ref }}"
