language: go

go:
  - '1.13.x'

dist: focal
os: linux

before_install:
  - |
    if [ "$TRAVIS_PULL_REQUEST" != "false" ] ; then
      set -e
      git fetch origin $TRAVIS_BRANCH
      git diff --name-only FETCH_HEAD | grep -qvE '(\.md$)|(^(doc|documentation|manual|olm|ci|deploy/cr/|deploy/olm-catalog|build/cekit|build/jenkins|build/minikube|test-integration|.gitignore))/' || {
        echo "Only docs, manual steps, test-integration,CI and OLM files were updated, stopping build process."
        travis_terminate 0
        exit 1
      }
    fi

jobs:
  include:
    - stage: "Unit Test"
      name: "Unit Test"
      arch: arm64
      virt: lxd
      before_script:
        - export GO111MODULE=on
      script:
        - go mod vendor
        - make unit-test

    - stage: "Test"
      name: "Kubernetes"
      services:
        - docker
      env:
        - KIND_VERSION=v0.8.1
      before_script:
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -Lo kind https://kind.sigs.k8s.io/dl/${KIND_VERSION}/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
        - kind create cluster --config kind-config.yaml
        - export KUBECONFIG=~/kind-kube-config.yaml
        - kind get kubeconfig > "${KUBECONFIG}"
        - export MAKE_DATADIR_WRITABLE=true
        - export GO111MODULE=on
        - export TESTING_CONTEXT=`kubectl --insecure-skip-tls-verify config current-context`
        - ./build/prepare-sa-test.sh
      script:
        - go mod vendor
        - RUN_SA_OPERATOR=TRUE make test
          # Run multinamespace tests as admin
          # skip role settings check for now
        - kubectl config use-context $TESTING_CONTEXT
        - make multinamespace-test
      after_failure:
        - kubectl config use-context $TESTING_CONTEXT
        - kubectl get events --all-namespaces
        - kubectl cluster-info
        - df -h
        - docker ps -a
        - for log in $(docker ps -qa | xargs); do docker logs --tail 500 $log; done
