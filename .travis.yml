language: go

go:
  - '1.13.x'

dist: focal
os: linux

before_install:
  - |
    if [ "$TRAVIS_PULL_REQUEST" != "false" ] ; then
      git fetch origin $TRAVIS_BRANCH
      git diff --name-only FETCH_HEAD | grep -qvE '(\.md$)|(^(doc|documentation|manual|olm|ci|deploy/cr/|deploy/olm-catalog|build/cekit|build/jenkins|build/minikube|test-integration|.gitignore))/' || {
        set -e
        echo "Only docs, manual steps, test-integration,CI and OLM files were updated, stopping build process."
        travis_terminate 0
        exit 1
      }
    fi

jobs:
  include:
    - stage: "Unit Test"
      name: "Unit Test"
      arch: arm64
      virt: lxd
      before_script:
        - export GO111MODULE=on
      script:
        - go mod vendor
        - make unit-test
    - stage: "Test"
      name: "Core and Multi-namespace tests"
      services:
        - docker
      env:
        - KIND_VERSION=v0.9.0
      before_script:
        - source ./build/travis/configure-travis-ci.sh
        - go mod vendor
      script:
        # Run multinamespace tests as admin (skip role settings check)
        - make test PARALLEL_COUNT=2 && make batch-test PARALLEL_COUNT=2 && kubectl config use-context $TESTING_CONTEXT && make multinamespace-test
      after_failure:
        - cat debug.log
        - kubectl config use-context $TESTING_CONTEXT
        - kubectl get events --all-namespaces
        - kubectl cluster-info
        - df -h
        - docker ps -a
        - for log in $(docker ps -qa | xargs); do docker logs --tail 500 $log; done
    - # stage name not required, will continue to use `Test`
      name: "Backup/Restore tests"
      services:
        - docker
      env:
        - KIND_VERSION=v0.9.0
      before_script:
        - source ./build/travis/configure-travis-ci.sh
        - go mod vendor
      script:
        - make backuprestore-test
      after_failure:
        - cat debug.log
        - kubectl config use-context $TESTING_CONTEXT
        - kubectl get events --all-namespaces
        - kubectl cluster-info
        - df -h
        - docker ps -a
        - for log in $(docker ps -qa | xargs); do docker logs --tail 500 $log; done
