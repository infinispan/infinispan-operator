#####################################################################
### THIS IS AUTOGENERATED INFINISPAN OPERATOR INSTALL BUNDLE FILE ###
###                  PLEASE DON'T EDIT THIS FILE                  ###
#####################################################################

apiVersion: v1
kind: ServiceAccount
metadata:
  name: infinispan-operator

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: infinispan-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/finalizers
  - daemonsets
  - replicasets
  - statefulsets
  - statefulsets/finalizers
  verbs:
  - '*'
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/custom-host
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - infinispan.org
  resources:
  - '*'
  - caches
  verbs:
  - '*'

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: infinispan-operator
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  - customresourcedefinitions/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/metrics
  - nodes/spec
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: infinispan-operator
subjects:
  - kind: ServiceAccount
    name: infinispan-operator
roleRef:
  kind: Role
  name: infinispan-operator
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: infinispan-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: infinispan-operator
subjects:
- kind: ServiceAccount
  name: infinispan-operator
# Replace namespace name on the next line if you are deploying to the different project/namespace
  namespace: infinispan-operator

---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: infinispans.infinispan.org
spec:
  group: infinispan.org
  names:
    kind: Infinispan
    listKind: InfinispanList
    plural: infinispans
    singular: infinispan
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Infinispan is the Schema for the infinispans API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: InfinispanSpec defines the desired state of Infinispan
          properties:
            autoscale:
              description: Autoscale describe autoscaling configuration for the cluster
              properties:
                maxMemUsagePercent:
                  type: integer
                maxReplicas:
                  format: int32
                  type: integer
                minMemUsagePercent:
                  type: integer
                minReplicas:
                  format: int32
                  type: integer
              required:
              - maxMemUsagePercent
              - maxReplicas
              - minMemUsagePercent
              - minReplicas
              type: object
            container:
              description: InfinispanContainerSpec specify resource requirements per
                container
              properties:
                cpu:
                  type: string
                extraJvmOpts:
                  type: string
                memory:
                  type: string
              type: object
            expose:
              description: ExposeSpec describe how Infinispan will be exposed externally
              properties:
                host:
                  type: string
                nodePort:
                  format: int32
                  type: integer
                type:
                  description: Type specifies different exposition methods for datagrid
                  enum:
                  - NodePort
                  - LoadBalancer
                  - Route
                  type: string
              required:
              - type
              type: object
            image:
              type: string
            logging:
              properties:
                categories:
                  additionalProperties:
                    type: string
                  type: object
              type: object
            replicas:
              format: int32
              type: integer
            security:
              description: InfinispanSecurity info for the user application connection
              properties:
                endpointEncryption:
                  description: EndpointEncryption configuration
                  properties:
                    certSecretName:
                      type: string
                    certServiceName:
                      type: string
                    type:
                      type: string
                  required:
                  - type
                  type: object
                endpointSecretName:
                  type: string
              type: object
            service:
              description: InfinispanServiceSpec specify configuration for specific
                service
              properties:
                container:
                  description: InfinispanServiceContainerSpec resource requirements
                    specific for service
                  properties:
                    storage:
                      type: string
                  required:
                  - storage
                  type: object
                replicationFactor:
                  format: int32
                  type: integer
                sites:
                  properties:
                    local:
                      properties:
                        expose:
                          description: ServiceSpec describes the attributes that a
                            user creates on a service.
                          properties:
                            clusterIP:
                              description: 'clusterIP is the IP address of the service
                                and is usually assigned randomly by the master. If
                                an address is specified manually and is not in use
                                by others, it will be allocated to the service; otherwise,
                                creation of the service will fail. This field can
                                not be changed through updates. Valid values are "None",
                                empty string (""), or a valid IP address. "None" can
                                be specified for headless services when proxying is
                                not required. Only applies to types ClusterIP, NodePort,
                                and LoadBalancer. Ignored if type is ExternalName.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                              type: string
                            externalIPs:
                              description: externalIPs is a list of IP addresses for
                                which nodes in the cluster will also accept traffic
                                for this service.  These IPs are not managed by Kubernetes.  The
                                user is responsible for ensuring that traffic arrives
                                at a node with this IP.  A common example is external
                                load-balancers that are not part of the Kubernetes
                                system.
                              items:
                                type: string
                              type: array
                            externalName:
                              description: externalName is the external reference
                                that kubedns or equivalent will return as a CNAME
                                record for this service. No proxying will be involved.
                                Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                                and requires Type to be ExternalName.
                              type: string
                            externalTrafficPolicy:
                              description: externalTrafficPolicy denotes if this Service
                                desires to route external traffic to node-local or
                                cluster-wide endpoints. "Local" preserves the client
                                source IP and avoids a second hop for LoadBalancer
                                and Nodeport type services, but risks potentially
                                imbalanced traffic spreading. "Cluster" obscures the
                                client source IP and may cause a second hop to another
                                node, but should have good overall load-spreading.
                              type: string
                            healthCheckNodePort:
                              description: healthCheckNodePort specifies the healthcheck
                                nodePort for the service. If not specified, HealthCheckNodePort
                                is created by the service api backend with the allocated
                                nodePort. Will use user-specified nodePort value if
                                specified by the client. Only effects when Type is
                                set to LoadBalancer and ExternalTrafficPolicy is set
                                to Local.
                              format: int32
                              type: integer
                            ipFamily:
                              description: ipFamily specifies whether this Service
                                has a preference for a particular IP family (e.g.
                                IPv4 vs. IPv6).  If a specific IP family is requested,
                                the clusterIP field will be allocated from that family,
                                if it is available in the cluster.  If no IP family
                                is requested, the cluster's primary IP family will
                                be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges,
                                externalIPs) and controllers which allocate external
                                load-balancers should use the same IP family.  Endpoints
                                for this Service will be of this family.  This field
                                is immutable after creation. Assigning a ServiceIPFamily
                                not available in the cluster (e.g. IPv6 in IPv4 only
                                cluster) is an error condition and will fail during
                                clusterIP assignment.
                              type: string
                            loadBalancerIP:
                              description: 'Only applies to Service Type: LoadBalancer
                                LoadBalancer will get created with the IP specified
                                in this field. This feature depends on whether the
                                underlying cloud-provider supports specifying the
                                loadBalancerIP when a load balancer is created. This
                                field will be ignored if the cloud-provider does not
                                support the feature.'
                              type: string
                            loadBalancerSourceRanges:
                              description: 'If specified and supported by the platform,
                                this will restrict traffic through the cloud-provider
                                load-balancer will be restricted to the specified
                                client IPs. This field will be ignored if the cloud-provider
                                does not support the feature. More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
                              items:
                                type: string
                              type: array
                            ports:
                              description: 'The list of ports that are exposed by
                                this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type=NodePort or LoadBalancer.
                                      Usually assigned by the system. If specified,
                                      it will be allocated to the service if unused
                                      or else creation of the service will fail. Default
                                      is to auto-allocate a port if the ServiceType
                                      of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            publishNotReadyAddresses:
                              description: publishNotReadyAddresses, when set to true,
                                indicates that DNS implementations must publish the
                                notReadyAddresses of subsets for the Endpoints associated
                                with the Service. The default value is false. The
                                primary use case for setting this field is to use
                                a StatefulSet's Headless Service to propagate SRV
                                records for its Pods without respect to their readiness
                                for purpose of peer discovery.
                              type: boolean
                            selector:
                              additionalProperties:
                                type: string
                              description: 'Route service traffic to pods with label
                                keys and values matching this selector. If empty or
                                not present, the service is assumed to have an external
                                process managing its endpoints, which Kubernetes will
                                not modify. Only applies to types ClusterIP, NodePort,
                                and LoadBalancer. Ignored if type is ExternalName.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                              type: object
                            sessionAffinity:
                              description: 'Supports "ClientIP" and "None". Used to
                                maintain session affinity. Enable client IP based
                                session affinity. Must be ClientIP or None. Defaults
                                to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                              type: string
                            sessionAffinityConfig:
                              description: sessionAffinityConfig contains the configurations
                                of session affinity.
                              properties:
                                clientIP:
                                  description: clientIP contains the configurations
                                    of Client IP based session affinity.
                                  properties:
                                    timeoutSeconds:
                                      description: timeoutSeconds specifies the seconds
                                        of ClientIP type session sticky time. The
                                        value must be >0 && <=86400(for 1 day) if
                                        ServiceAffinity == "ClientIP". Default value
                                        is 10800(for 3 hours).
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            type:
                              description: 'type determines how the Service is exposed.
                                Defaults to ClusterIP. Valid options are ExternalName,
                                ClusterIP, NodePort, and LoadBalancer. "ExternalName"
                                maps to the specified externalName. "ClusterIP" allocates
                                a cluster-internal IP address for load-balancing to
                                endpoints. Endpoints are determined by the selector
                                or if that is not specified, by manual construction
                                of an Endpoints object. If clusterIP is "None", no
                                virtual IP is allocated and the endpoints are published
                                as a set of endpoints rather than a stable IP. "NodePort"
                                builds on ClusterIP and allocates a port on every
                                node which routes to the clusterIP. "LoadBalancer"
                                builds on NodePort and creates an external load-balancer
                                (if supported in the current cloud) which routes to
                                the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                              type: string
                          type: object
                        name:
                          type: string
                      required:
                      - expose
                      - name
                      type: object
                    locations:
                      items:
                        properties:
                          name:
                            type: string
                          secretName:
                            type: string
                          url:
                            type: string
                        required:
                        - name
                        - secretName
                        - url
                        type: object
                      type: array
                  required:
                  - local
                  type: object
                type:
                  type: string
              required:
              - type
              type: object
          required:
          - replicas
          type: object
        status:
          description: InfinispanStatus defines the observed state of Infinispan
          properties:
            conditions:
              description: 'Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file'
              items:
                description: InfinispanCondition define a condition of the cluster
                properties:
                  message:
                    description: Human-readable message indicating details about last
                      transition.
                    type: string
                  status:
                    description: Status is the status of the condition.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                required:
                - message
                - status
                - type
                type: object
              type: array
            replicasWantedAtRestart:
              format: int32
              type: integer
            security:
              description: InfinispanSecurity info for the user application connection
              properties:
                endpointEncryption:
                  description: EndpointEncryption configuration
                  properties:
                    certSecretName:
                      type: string
                    certServiceName:
                      type: string
                    type:
                      type: string
                  required:
                  - type
                  type: object
                endpointSecretName:
                  type: string
              type: object
            statefulSetName:
              type: string
          required:
          - security
          - statefulSetName
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true

---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: caches.infinispan.org
spec:
  group: infinispan.org
  names:
    kind: Cache
    listKind: CacheList
    plural: caches
    singular: cache
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Cache is the Schema for the caches API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CacheSpec defines the desired state of Cache
          properties:
            adminAuth:
              description: Authentication info
              properties:
                password:
                  description: Secret and key containing the admin password for authentication.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                secretName:
                  description: name of the secret containing both admin username and
                    password
                  type: string
                username:
                  description: Secret and key containing the admin username for authentication.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
              type: object
            clusterName:
              description: Name of the cluster where to create the cache
              type: string
            name:
              description: Name of the cache to be created. If empty ObjectMeta.Name
                will be used
              type: string
            template:
              description: Cache template in XML format
              type: string
            templateName:
              description: Name of the template to be used to create this cache
              type: string
          type: object
        status:
          description: CacheStatus defines the observed state of Cache
          properties:
            conditions:
              description: Conditions list for this cache
              items:
                description: CacheCondition define a condition of the cluster
                properties:
                  message:
                    description: Human-readable message indicating details about last
                      transition.
                    type: string
                  status:
                    description: Status is the status of the condition.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            serviceName:
              description: Service name that exposes the cache inside the cluster
              type: string
          type: object
      type: object
  version: v2alpha1
  versions:
  - name: v2alpha1
    served: true
    storage: true

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: infinispan-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: infinispan-operator
  template:
    metadata:
      labels:
        name: infinispan-operator
    spec:
      serviceAccountName: infinispan-operator
      containers:
        - name: infinispan-operator
          image: jboss/infinispan-operator:latest
          ports:
          - containerPort: 60000
            name: metrics
          command:
          - infinispan-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "infinispan-operator"
