// Code generated by rice embed-go; DO NOT EDIT.
package infinispan

import (
	"time"

	"github.com/GeertJohan/go.rice/embedded"
)

func init() {

	// define files
	file2 := &embedded.EmbeddedFile{
		Filename:    "dependencies.gotmpl",
		FileModTime: time.Unix(1620137619, 0),

		Content: string("{{/* Dependencies download script for init container */}}\nset -e\nfunction retry {\n    local n=1\n    local max=5\n    local delay=1\n    while true; do\n        $@ && break || {\n            if [[ $n -lt $max ]]; then\n                ((n++))\n                echo \"Download failed. Attempt $n/$max:\"\n                sleep $delay\n            else\n                echo \"Artifact download has failed after $n attempts.\"\n                exit 1\n            fi\n        }\n    done\n}\nfunction unpack {\n    if [[ ${2} == \"\" && ${1} =~ \".zip\" || ${2} == \"zip\" ]]; then\n        unzip -oq ${1} && rm ${1}\n    fi\n    if [[ ${2} == \"\" && ${1} =~ \".tar.gz\" || ${2} == \"tgz\" ]]; then\n        tar xf ${1} && rm ${1}\n    fi\n}\ncd {{ .MountPath }}\n{{- range $i, $artifact := .Artifacts }}\n    mkdir -p ./tmp\n    cd ./tmp\n    retry \"curl --insecure -LO {{ $artifact.Url }}\"\n    FILENAME=$(ls -1 . | head -n1)\n    {{ hashCmd $artifact \"$FILENAME\" }}\n    cd .. && mv ./tmp/$FILENAME .\n    unpack {{ $artifact.Type }} $FILENAME\n    rm -rf ./tmp\n{{- end }}"),
	}

	// define dirs
	dir1 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1620137619, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file2, // "dependencies.gotmpl"

		},
	}

	// link ChildDirs
	dir1.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`templates`, &embedded.EmbeddedBox{
		Name: `templates`,
		Time: time.Unix(1620137619, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir1,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"dependencies.gotmpl": file2,
		},
	})
}
