<infinispan
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="urn:infinispan:config:14.0 https://infinispan.org/schemas/infinispan-config-14.0.xsd
                        urn:infinispan:server:14.0 https://infinispan.org/schemas/infinispan-server-14.0.xsd
                        urn:org:jgroups http://www.jgroups.org/schema/jgroups-5.2.xsd"
    xmlns="urn:infinispan:config:14.0"
    xmlns:server="urn:infinispan:server:14.0">

<jgroups>
    {{ if .XSite }} {{ if .XSite.Sites }}
    <stack name="relay-tunnel" extends="udp">
        <TUNNEL
            bind_addr="${jgroups.relay.bind.address:SITE_LOCAL}"
            bind_port="${jgroups.relay.bind.port:0}"
            gossip_router_hosts="{{RemoteSites .XSite.Sites}}"
            diag.enabled="{{ .JGroups.Diagnostics }}"
            port_range="0"
            {{ if .JGroups.FastMerge }}reconnect_interval="1000"{{ end }}
            {{- if .XSite.HeartbeatEnabled }}
            heartbeat_interval="{{.XSite.HeartbeatInterval}}"
            heartbeat_timeout="{{.XSite.HeartbeatTimeout}}"
            {{- end}}
            stack.combine="REPLACE"
            stack.position="UDP"
        />
        <!-- we are unable to use FD_SOCK with openshift -->
        <!-- otherwise, we would need 1 external service per pod -->
        <FD_SOCK2 stack.combine="REMOVE"/>
        <!-- defaults: https://github.com/belaban/JGroups/blob/25394fdc3e781814dfdd9c9006ba0c0de3b62071/src/org/jgroups/protocols/FailureDetection.java#L27-L32 -->
        <FD_ALL3
            interval="${jgroups.xsite.fd.interval:8000}"
            timeout="${jgroups.xsite.fd.timeout:40000}"
            stack.combine="COMBINE"/>
        {{ if .JGroups.FastMerge }}
        <MERGE3 min_interval="1000" max_interval="3000" check_interval="5000" stack.combine="COMBINE"/>
        {{ end }}
    </stack>
    {{ end }} {{ end }}
    <stack name="image-tcp" extends="kubernetes">
        <!-- overwrite diagnostics-->
        <TCP diag.enabled="${jgroups.diag.enabled:{{ .JGroups.Diagnostics }}}" stack.combine="COMBINE" />
        <!-- overwrite DNS query (only required attribute) -->
        <dns.DNS_PING dns_query="${jgroups.dns.query:{{ .StatefulSetName }}-ping.{{ .Namespace }}.svc.cluster.local}" stack.combine="COMBINE" />
        {{- if .JGroups.FastMerge }}
        <!-- for testing, detects partitions quickly -->
        <MERGE3 min_interval="1000" max_interval="3000" check_interval="5000" stack.combine="COMBINE" />
        {{ end }}
        {{- if .XSite }} {{- if .XSite.Sites }}
        <!-- RELAY2 for cross-site feature -->
        <relay.RELAY2 xmlns="urn:org:jgroups" site="{{ (index .XSite.Sites 0).Name }}" max_site_masters="{{ .XSite.MaxRelayNodes }}" />
        <remote-sites default-stack="relay-tunnel">{{ range $it := .XSite.Sites }}
            <remote-site name="{{ $it.Name }}"/>
        {{ end }}</remote-sites> {{ end }}{{ end }}
    </stack>
</jgroups>
<server xmlns="urn:infinispan:server:14.0">
    <interfaces>
        <interface name="public">
            <inet-address value="${infinispan.bind.address}"/>
        </interface>
    </interfaces>
    <socket-bindings default-interface="public" port-offset="${infinispan.socket.binding.port-offset:0}">
        <socket-binding name="admin" port="11223"/>
    </socket-bindings>
    <security>
        <security-realms>
            <security-realm name="admin">
                <properties-realm groups-attribute="Roles">
                    <user-properties path="cli-admin-users.properties" relative-to="infinispan.server.config.path"/>
                    <group-properties path="cli-admin-groups.properties" relative-to="infinispan.server.config.path"/>
                </properties-realm>
            </security-realm>
        </security-realms>
    </security>
    <endpoints security-realm="admin">
        <endpoint socket-binding="admin" security-realm="admin">
            <rest-connector>
                <authentication mechanisms="BASIC DIGEST"/>
            </rest-connector>
            <hotrod-connector />
        </endpoint>
    </endpoints>
</server>
</infinispan>
